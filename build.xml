<?xml version="1.0" encoding="UTF-8"?>
<!-- updated 25 May 2011 to create parser stub jar -->

<project name="ICE" default="dist-all-jar">
    <target name="init">
        <property name="packages" value="edu.nyu.jet.*" />
        <property name="version" value="0.3" />

        <property name="src.dir" value="src/main/java" />
        <property name="build.dir" value="build/main" />
        <property name="lib.dir" value="lib" />
        <property name="docs.dir" value="docs" />
        <property name="test.src.dir" value="src/test/java" />
        <property name="test.build.dir" value="build/test" />
        <property name="test.report.dir" value="report" />
        <property name="build.javadocs" value="${docs.dir}/api" />
        <property name="jar.filename" value="ice-all-${version}.jar" />

        <property name="jar.all.ver.filename" value="ice-all-${version}.jar" />
        <property name="jar.all.filename" value="ice-all.jar" />
        <property name="jar.build.dir" value="build/jar" />

        <property name="debug" value="true" />
        <property name="optimize" value="false" />

        <path id="build.classpath">
            <fileset dir="${lib.dir}">
                <include name="commons-cli-1.2.jar" />
                <include name="commons-exec-1.1.jar" />
                <include name="commons-io-1.3.2.jar" />
                <include name="commons-math3-3.2.jar" />
                <include name="guava-18.0.jar" />
                <include name="la4j-0.6.0.jar" />
                <include name="miglayout-swing-4.2.jar" />
                <include name="miglayout-core-4.2.jar" />
                <include name="jet-all.jar" />
            </fileset>
        </path>

        <path id="test.classpath">
            <fileset dir="${lib.dir}">
                <include name="commons-cli-1.2.jar" />
                <include name="commons-exec-1.1.jar" />
                <include name="commons-io-1.3.2.jar" />
                <include name="commons-math3-3.2.jar" />
                <include name="guava-18.0.jar" />
                <include name="la4j-0.6.0.jar" />
                <include name="miglayout-swing-4.2.jar" />
                <include name="miglayout-core-4.2.jar" />
                <include name="junit-4.0.jar" />
                <include name="fest-swing-1.2.jar" />
                <include name="fest-assert-1.2.jar" />
                <include name="fest-reflect-1.2.jar" />
                <include name="fest-util-1.1.2.jar" />
                <include name="jet-all.jar" />
            </fileset>
        </path>
    </target>

    <target name="prepare" depends="init">
        <mkdir dir="${build.dir}" />
    </target>

    <target name="compile" depends="prepare">
        <javac srcdir="${src.dir}"
               destdir="${build.dir}"
               encoding="UTF-8"
               classpathref="build.classpath"
               optimize="${optimize}"
               debug="${debug}">
        </javac>

        <copy todir="${build.dir}">
            <fileset dir="${src.dir}">
                <include name="**/*.dtd" />
                <include name="**/*.properties" />
                <include name="**/resources/*" />
            </fileset>
        </copy>
    </target>


    <target name="compile-tests" depends="compile">
        <mkdir dir="${test.build.dir}" />
        <javac srcdir="${test.src.dir}"
               destdir="${test.build.dir}"
               classpathref="test.classpath">
            <classpath>
                <pathelement path="${build.dir}" />
            </classpath>
        </javac>
    </target>

    <target name="test" depends="compile-tests">
        <mkdir dir="${test.report.dir}" />

        <junit printsummary="yes" fork="no" maxmemory="1600m">
            <classpath refid="test.classpath" />
            <classpath>
                <pathelement path="${build.dir}" />
                <pathelement path="${test.build.dir}" />
            </classpath>

            <formatter type="plain" />

            <batchtest fork="no" todir="${test.report.dir}">
                <fileset dir="${test.src.dir}">
                    <include name="**/*Test.java" />
                    <exclude name="**/Abstract*.java" />
                    <exclude name="**/AllTest.java" />
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="javadoc" depends="init">
        <mkdir dir="${build.javadocs}" />
        <javadoc packagenames="${packages}"
                 sourcepath="${src.dir}"
                 destdir="${build.javadocs}"
                 author="true"
                 version="true"
                 use="true"
                 splitindex="true"
                 noindex="false"
                 windowtitle="Jet (Java Extraction Toolkit)"
                 doctitle="Jet API v${version}"
                 classpathref="build.classpath"
                 locale="en_US" />
    </target>

    <target name="dist-jar" depends="compile">
        <jar jarfile="${jar.filename}" basedir="${build.dir}" excludes="**/*.html" />
    </target>

    <target name="clean" depends="init">
        <delete dir="${build.dir}" />
        <delete dir="${build.javadocs}" />
        <delete dir="${test.build.dir}" />
        <delete dir="${test.report.dir}" />
    </target>

    <target name="dist-all-jar" depends="compile">
        <mkdir dir="${jar.build.dir}" />
        <unjar dest="${jar.build.dir}">
            <fileset dir="${lib.dir}">
                <include name="commons-cli-1.2.jar" />
                <include name="commons-exec-1.1.jar" />
                <include name="commons-io-1.3.2.jar" />
                <include name="commons-math3-3.2.jar" />
                <include name="guava-18.0.jar" />
                <include name="la4j-0.6.0.jar" />
                <include name="miglayout-swing-4.2.jar" />
                <include name="miglayout-core-4.2.jar" />
                <include name="jet-all.jar"  />
            </fileset>
        </unjar>
        <delete dir="${jar.build.dir}/META-INF" />
        <copy todir="${jar.build.dir}">
            <fileset dir="${build.dir}"/>
        </copy>
        <jar jarfile="${jar.all.ver.filename}" basedir="${jar.build.dir}" index="true"/>
        <delete dir="${jar.build.dir}" />
        <copy file="${jar.all.ver.filename}" tofile="${jar.all.filename}" overwrite="true"/>
    </target>
</project>
